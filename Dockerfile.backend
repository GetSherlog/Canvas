FROM python:3.11-slim

WORKDIR /app

# Install system dependencies and Deno
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    unzip \
    && rm -rf /var/lib/apt/lists/* \
    && curl -fsSL https://deno.land/x/install/install.sh | sh \
    && mv /root/.deno/bin/deno /usr/local/bin/deno

# Copy requirements first for better caching
COPY requirements.txt .

# Install dependencies using pip directly
RUN pip install --no-cache-dir -r requirements.txt

# Create node_modules directory for Deno
RUN mkdir -p node_modules && chmod 777 node_modules

# Warm up the Pyodide environment
RUN deno run -A --unstable-worker-options jsr:@pydantic/mcp-run-python warmup

# Copy application code
COPY backend/ ./backend/

# Create data directory
RUN mkdir -p data/notebooks

# Set environment variables
ENV PYTHONPATH=/app
ENV SHERLOG_API_HOST=0.0.0.0
ENV SHERLOG_API_PORT=8000
ENV SHERLOG_DEBUG=false
ENV SHERLOG_NOTEBOOK_STORAGE_TYPE=file
ENV SHERLOG_NOTEBOOK_FILE_STORAGE_DIR=/app/data/notebooks
ENV SHERLOG_CONNECTION_STORAGE_TYPE=file
ENV SHERLOG_CONNECTION_FILE_PATH=/app/data/connections.json
ENV PYTHONUNBUFFERED=1
ENV LOGFIRE_TOKEN=""
ENV SHERLOG_ENV=development

# Expose API port
EXPOSE 8000

# Run the application
CMD ["python", "-m", "uvicorn", "backend.server:app", "--host", "0.0.0.0", "--port", "8000"]