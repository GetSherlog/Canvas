services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: sherlog-canvas-backend
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - SHERLOG_OPENROUTER_API_KEY=${SHERLOG_OPENROUTER_API_KEY:-}
      - SHERLOG_AI_MODEL=${SHERLOG_AI_MODEL:-anthropic/claude-3.7-sonnet}
      - SHERLOG_REDIS_HOST=redis
      - SHERLOG_REDIS_PORT=6379
      - SHERLOG_PROJECT_HOST_ROOT=${PWD}
    ports:
      - "9091:8000"
      - "9092:8100"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: sherlog-canvas-redis
    ports:
      - "6379:6379" # Expose port if needed outside the docker network
    volumes:
      - redis_data:/data # Optional volume for persistence
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sherlog-canvas-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  tests:
    build:
      context: .
      dockerfile: Dockerfile.tests
    container_name: sherlog-canvas-tests
    volumes:
      - ./integration_tests:/app/integration_tests
      - ./backend:/app/backend # Mount local backend code
    env_file:
      - .env # Or define specific environment variables if needed
    environment:
      - BACKEND_URL=http://backend:8000 # Service name 'backend' is resolvable within Docker network
    depends_on:
      backend:
        condition: service_healthy
    # The command will be defined in Dockerfile.tests or overridden here if needed
    # For example: command: ["pytest", "/app/integration_tests"]
    # We'll keep it simple for now and let the Dockerfile handle the CMD

volumes:
  data:
    driver: local
  redis_data: # Define the named volume for Redis persistence
    driver: local
